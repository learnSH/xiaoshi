(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{399:function(s,t,a){"use strict";a.r(t);var r=a(4),e=Object(r.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"docker配置文件daemon-json详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker配置文件daemon-json详解"}},[s._v("#")]),s._v(" docker配置文件daemon.json详解")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"data-root"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/home/dockerInfo"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"log-driver"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"json-file"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"log-opts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"max-size"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"50m"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"max-file"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"storage-opt"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dm.xfs_nospace_max_retries=0"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("这是 Docker daemon 的配置文件 daemon.json 的示例，包括以下参数：")]),s._v(" "),t("h3",{attrs:{id:"_1-data-root-home-dockerinfo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-data-root-home-dockerinfo"}},[s._v("#")]),s._v(' 1. "data-root": "/home/dockerInfo"')]),s._v(" "),t("blockquote",[t("p",[s._v("这个参数指定 Docker 作为数据文件的根目录，所有的容器、映像、网络和数据卷数据都将存储在该目录下的子目录中。")])]),s._v(" "),t("h3",{attrs:{id:"_2-log-driver-json-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-log-driver-json-file"}},[s._v("#")]),s._v(' 2. "log-driver": "json-file"')]),s._v(" "),t("blockquote",[t("p",[s._v("这个参数指定 Docker 守护进程使用的日志驱动程序。")])]),s._v(" "),t("h3",{attrs:{id:"_3-log-opts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-log-opts"}},[s._v("#")]),s._v(' 3. "log-opts":')]),s._v(" "),t("blockquote",[t("p",[s._v("这个参数定义了 Docker 日志记录的选项，其中 max-size 和 max-file 控制日志文件大小和数量。")])]),s._v(" "),t("h3",{attrs:{id:"_4-storage-opt-dm-xfs-nospace-max-retries-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-storage-opt-dm-xfs-nospace-max-retries-0"}},[s._v("#")]),s._v(' 4. "storage-opt":"dm.xfs_nospace_max_retries=0"')]),s._v(" "),t("blockquote",[t("p",[s._v("这个参数定义了存储驱动程序的选项，这里用 dm.xfs_nospace_max_retries 选项来指定当磁盘空间不足时的操作，将其设置为 0 来禁用重试操作。"),t("br")])]),s._v(" "),t("blockquote",[t("p",[s._v("此参数还解决了docker部署在centos系统中一个bug, 容器在启动一段时间后，对容器的所有指令都会未响应，是个卡死的状态，只能重启docker，此参数会解决这个问题。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);